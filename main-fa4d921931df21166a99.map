{"version":3,"sources":["webpack:///fa4d921931df21166a99.worker.js","webpack:///webpack/bootstrap fa4d921931df21166a99","webpack:///./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js","webpack:///./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js","webpack:///./src/map/tileworker.js","webpack:///./node_modules/@mapbox/vector-tile/index.js","webpack:///./node_modules/@mapbox/vector-tile/lib/vectortile.js","webpack:///./node_modules/@mapbox/point-geometry/index.js","webpack:///./node_modules/pbf/index.js","webpack:///./node_modules/ieee754/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","VectorTileLayer","pbf","end","this","version","extent","length","_pbf","_keys","_values","_features","readFields","readLayer","tag","layer","readVarint","readString","push","pos","readValueMessage","value","readFloat","readDouble","readVarint64","readSVarint","readBoolean","VectorTileFeature","feature","Error","keys","values","properties","type","_geometry","readFeature","id","readTag","key","classifyRings","rings","len","polygon","ccw","polygons","area","signedArea","undefined","ring","p1","p2","sum","j","x","y","Point","types","loadGeometry","line","cmd","lines","cmdLen","clone","bbox","x1","Infinity","x2","y1","y2","toGeoJSON","z","project","y0","size","x0","Math","PI","atan","exp","pow","coords","points","result","geometry","coordinates","_vectorTile","_pbf2","obj","default","handleOnMessage","event","url","data","request","XMLHttpRequest","open","responseType","onload","onTileLoad","send","target","status","arrayBuffer","response","tileData","parseData","Uint8Array","postMessage","close","tile","VectorTile","layers","forEach","features","geom","onmessage","readTile","add","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","k","_mult","div","_div","rotate","a","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","sqrt","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","b","angleWith","angleWithSep","cos","sin","convert","Array","isArray","Pbf","buf","ArrayBuffer","isView","readVarintRemainder","h","toNum","readPackedEnd","Bytes","low","high","isSigned","writeBigVarint","val","realloc","writeBigVarintLow","writeBigVarintHigh","lsb","makeRoomForExtraLength","startPos","extraLen","ceil","log","LN2","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","readUtf8","str","b0","bytesPerSequence","b1","b2","b3","String","fromCharCode","writeUtf8","lead","charCodeAt","ieee754","Varint","Fixed64","Fixed32","destroy","readField","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","read","num","Boolean","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","floor","writeString","write","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN"],"mappings":"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","file":"fa4d921931df21166a99.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar VectorTileFeature = __webpack_require__(1);\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Point = __webpack_require__(5);\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (!length) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (!length) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _vectorTile = __webpack_require__(3);\n\nvar _pbf = __webpack_require__(6);\n\nvar _pbf2 = _interopRequireDefault(_pbf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Web-worker to download and parse a vector tile.\n */\n\n/* eslint-env worker */\nvar handleOnMessage = function handleOnMessage(event) {\n  var url = event.data;\n\n  var request = new XMLHttpRequest();\n  request.open('GET', url);\n  request.responseType = 'arraybuffer';\n  request.onload = onTileLoad; // eslint-disable-line no-use-before-define\n  request.send(null);\n};\n\nvar onTileLoad = function onTileLoad(event) {\n  var request = event.target;\n  if (request.status === 200) {\n    var arrayBuffer = request.response;\n    // eslint-disable-next-line no-use-before-define\n    var tileData = parseData(new Uint8Array(arrayBuffer));\n    postMessage(tileData);\n  } else {\n    postMessage(null);\n  }\n  close();\n};\n\n/**\n * Create a plain-JS-object containing the layers and\n * features of the vector tile to send back to the main thread.\n */\nvar parseData = function parseData(data) {\n  var tile = new _vectorTile.VectorTile(new _pbf2.default(data));\n\n  var layers = {};\n  Object.keys(tile.layers).forEach(function (name) {\n    var layer = tile.layers[name];\n\n    var features = [];\n    for (var i = 0; i < layer.length; i++) {\n      var feature = layer.feature(i);\n      features.push({\n        type: feature.type,\n        geom: feature.loadGeometry(),\n        properties: feature.properties\n      });\n    }\n\n    layers[name] = {\n      extent: layer.extent,\n      features: features\n    };\n  });\n\n  return layers;\n};\n\nonmessage = handleOnMessage;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports.VectorTile = __webpack_require__(4);\nmodule.exports.VectorTileFeature = __webpack_require__(1);\nmodule.exports.VectorTileLayer = __webpack_require__(0);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar VectorTileLayer = __webpack_require__(0);\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = Pbf;\n\nvar ieee754 = __webpack_require__(7);\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// fa4d921931df21166a99.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fa4d921931df21166a99","'use strict';\n\nvar VectorTileFeature = require('./vectortilefeature.js');\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (!length) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (!length) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js\n// module id = 1\n// module chunks = 0","/* eslint-env worker */\nimport {VectorTile} from '@mapbox/vector-tile';\nimport Protobuf from 'pbf';\n\n/**\n * Web-worker to download and parse a vector tile.\n */\n\nconst handleOnMessage = (event) => {\n  const url = event.data;\n\n  const request = new XMLHttpRequest();\n  request.open('GET', url);\n  request.responseType = 'arraybuffer';\n  request.onload = onTileLoad; // eslint-disable-line no-use-before-define\n  request.send(null);\n};\n\n\nconst onTileLoad = (event) => {\n  const request = event.target;\n  if (request.status === 200) {\n    const arrayBuffer = request.response;\n    // eslint-disable-next-line no-use-before-define\n    const tileData = parseData(new Uint8Array(arrayBuffer));\n    postMessage(tileData);\n  } else {\n    postMessage(null);\n  }\n  close();\n};\n\n\n/**\n * Create a plain-JS-object containing the layers and\n * features of the vector tile to send back to the main thread.\n */\nconst parseData = (data) => {\n  const tile = new VectorTile(new Protobuf(data));\n\n  const layers = {};\n  Object.keys(tile.layers).forEach((name) => {\n    const layer = tile.layers[name];\n\n    const features = [];\n    for (let i = 0; i < layer.length; i++) {\n      const feature = layer.feature(i);\n      features.push({\n        type: feature.type,\n        geom: feature.loadGeometry(),\n        properties: feature.properties\n      });\n    }\n\n    layers[name] = {\n      extent: layer.extent,\n      features\n    };\n  });\n\n  return layers;\n};\n\nonmessage = handleOnMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/tileworker.js","module.exports.VectorTile = require('./lib/vectortile.js');\nmodule.exports.VectorTileFeature = require('./lib/vectortilefeature.js');\nmodule.exports.VectorTileLayer = require('./lib/vectortilelayer.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@mapbox/vector-tile/index.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar VectorTileLayer = require('./vectortilelayer');\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@mapbox/vector-tile/lib/vectortile.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@mapbox/point-geometry/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pbf/index.js\n// module id = 6\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}